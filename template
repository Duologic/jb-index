#compdef jb

typeset -A opt_args

install_args=(
{{install_args}}
)

update_args() {
    [ -f jsonnetfile.lock.json ] && \
    jsonnet \
        --tla-code jsonnetfile='import "./jsonnetfile.lock.json"' \
        -S \
        -e "function(jsonnetfile)
              local urls = std.sort([
                '%s/%s' % [
                  d.source.git.remote,
                  d.source.git.subdir,
                ]
                for d in jsonnetfile.dependencies
                if 'git' in d.source
              ]);
              std.join('\\n', urls)"
}

_arguments -C \
  '1:cmds:->cmds' \
  '*:: :->args' \
&& ret=0

case "$state" in
  (cmds)
     local commands; commands=(
      'help:Show help'
      'init:Initialize a new empty jsonnetfile'
      'install:Install dependencies'
      'update:Update all or specific dependencies'
      'rewrite:Automatically rewrite legacy imports to absolute ones'

      '--help:Show context-sensitive help'
      '--help-long:Show extended help'
      '--help-man:Show manpages'
      '--version:Show application version'
      '--jsonnetpkg-home="vendor":The directory used to cache packages in'
      '--quiet:Suppress any output from git command'
     )

      _describe -t commands 'command' commands && ret=0
  ;;
  (args)
    case $line[1] in
      (install)
        _arguments "1: :($install_args)"
      ;;
      (update)
        _arguments "1: :($(update_args))"
      ;;
    esac
  ;;
esac

return 1;
